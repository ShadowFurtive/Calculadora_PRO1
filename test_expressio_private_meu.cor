// De POSTFIXA a POSTFIXA
-1234567890 
T 
x 
a not not not not 
a b c d e != == or and 
aa bb cc dd ee != == or and 
a b c d e / * - + 
a1 b2 c3 d4 e5 / * - + 
//
// De POSTFIXA a INFIXA
-1234567890
T
x
not ( not ( not ( not a ) ) )
a and ( b or c == d != e )
aa and ( bb or cc == dd != ee )
a + b - c * d / e
a1 + b2 - c3 * d4 / e5
//
// De INFIXA a POSTFIXA
22 
18 
a b a not or and 
a b and 
a b and 
a b and F or 
a b and F or 
a b or a b b and or and 
a b or a b b and or and 
a b a and or b b and or 
0 
0 
-10 
12 
2 
x 3 + 2 y * + 2 y * 3 x + + - 
x 3 + 2 y * + 2 y * 3 + x + - 
x 3 + 2 y * + 2 y * - 3 + x + 
x 12 + 12 x + + 
x 12 + 
12 x + 
x 12 + 12 x + - 
x 12 + 
x 12 + 12 x + * 
0 
0 
x 12 + 
12 x + 
x 12 + 12 x + / 
x 12 + 
0 
T c == d or e and 
T c d or == e and 
T c d e and or == 
T c == d e and or 
aa bb cc T == or and 
aa bb cc or T == and 
aa bb and cc or T == 
aa bb and cc T == or 
a b / c * d - e + 
a b / c * d - e + 
a b / c * d - e + 
a b / c * d - e + 
a b / c * d e + - 
a b / c d e + - * 
a b c d e + - * / 
a1 b2 c3 d4 e5 / * - + 
a1 b2 c3 d4 * e5 / - + 
a1 b2 c3 d4 * e5 / - + 
a1 b2 + c3 d4 * e5 / - 
a1 b2 c3 - d4 * e5 / + 
a1 b2 c3 - + d4 * e5 / 
a1 b2 c3 - + d4 e5 / * 
c d and a b and and 
c d and a and b and 
c d and not a b and not and 
c d and not not a b and not not and 
c not d not and a not and b not and 
c not not d not not and a not not and b not not and 
//
// De INFIXA a INFIXA
22
18
a and ( b or not a )
a and b
a and b
a and b or F
a and b or F
( a or b ) and ( a or b and b )
( a or b ) and ( a or b and b )
a or b and a or b and b
0
0
-10
12
2
x + 3 + 2 * y - ( 2 * y + 3 + x )
x + 3 + 2 * y - ( 2 * y + 3 + x )
x + 3 + 2 * y - 2 * y + 3 + x
x + 12 + 12 + x
x + 12
12 + x
x + 12 - ( 12 + x )
x + 12
( x + 12 ) * ( 12 + x )
0
0
x + 12
12 + x
( x + 12 ) / ( 12 + x )
x + 12
0
( T == c or d ) and e
T == ( c or d ) and e
T == ( c or d and e )
T == c or d and e
aa and ( bb or cc == T )
aa and ( bb or cc ) == T
( aa and bb or cc ) == T
aa and bb or cc == T
a / b * c - d + e
a / b * c - d + e
a / b * c - d + e
a / b * c - d + e
a / b * c - ( d + e )
a / b * ( c - ( d + e ) )
a / ( b * ( c - ( d + e ) ) )
a1 + b2 - c3 * d4 / e5
a1 + b2 - c3 * d4 / e5
a1 + b2 - c3 * d4 / e5
a1 + b2 - c3 * d4 / e5
a1 + ( b2 - c3 ) * d4 / e5
( a1 + b2 - c3 ) * d4 / e5
( a1 + b2 - c3 ) * d4 / e5
c and d and a and b
c and d and a and b
not ( c and d ) and not ( a and b )
not ( not ( c and d ) ) and not ( not ( a and b ) )
not c and not d and not a and not b
not ( not c ) and not ( not d ) and not ( not a ) and not ( not b )
//
// Llista d'OPERANDS
22 
18 
a b a 
a b 
a b 
a b F 
a b F 
a b a b b 
a b a b b 
a b a b b 
0 
0 
-10 
12 
2 
x 3 2 y 2 y 3 x 
x 3 2 y 2 y 3 x 
x 3 2 y 2 y 3 x 
x 12 12 x 
x 12 
12 x 
x 12 12 x 
x 12 
x 12 12 x 
0 
0 
x 12 
12 x 
x 12 12 x 
x 12 
0 
T c d e 
T c d e 
T c d e 
T c d e 
aa bb cc T 
aa bb cc T 
aa bb cc T 
aa bb cc T 
a b c d e 
a b c d e 
a b c d e 
a b c d e 
a b c d e 
a b c d e 
a b c d e 
a1 b2 c3 d4 e5 
a1 b2 c3 d4 e5 
a1 b2 c3 d4 e5 
a1 b2 c3 d4 e5 
a1 b2 c3 d4 e5 
a1 b2 c3 d4 e5 
a1 b2 c3 d4 e5 
c d a b 
c d a b 
c d a b 
c d a b 
c d a b 
c d a b 
//
// EXPANDEIX llegeix un token i una 2a expressi贸,
// canvia els tokens de la 1a expressi贸 per la 2a expressi贸
// i l'expressi贸 resultant l'avalua i la mostra infixa
22
18
b and ( b or not b )
b and b
b and b
b and b or F
b and b or F
( b or b ) and ( b or b and b )
( b or b ) and ( b or b and b )
b or b and b or b and b
0
0
-10
12
2
y + 3 + 2 * y - ( 2 * y + 3 + y )
y + 3 + 2 * y - ( 2 * y + 3 + y )
y + 3 + 2 * y - 2 * y + 3 + y
y + 12 + 12 + y
y + 12
12 + y
y + 12 - ( 12 + y )
y + 12
( y + 12 ) * ( 12 + y )
0
0
y + 12
12 + y
( y + 12 ) / ( 12 + y )
y + 12
0
( T == d or d ) and e
T == ( d or d ) and e
T == ( d or d and e )
T == d or d and e
bb and ( bb or cc == T )
bb and ( bb or cc ) == T
( bb and bb or cc ) == T
bb and bb or cc == T
b / b * c - d + e
b / b * c - d + e
b / b * c - d + e
b / b * c - d + e
b / b * c - ( d + e )
b / b * ( c - ( d + e ) )
b / ( b * ( c - ( d + e ) ) )
b2 + b2 - c3 * d4 / e5
b2 + b2 - c3 * d4 / e5
b2 + b2 - c3 * d4 / e5
b2 + b2 - c3 * d4 / e5
b2 + ( b2 - c3 ) * d4 / e5
( b2 + b2 - c3 ) * d4 / e5
( b2 + b2 - c3 ) * d4 / e5
c and d and b and b
c and d and b and b
not ( c and d ) and not ( b and b )
not ( not ( c and d ) ) and not ( not ( b and b ) )
not c and not d and not b and not b
not ( not c ) and not ( not d ) and not ( not b ) and not ( not b )
//
22
18
a and b and ( b or not ( a and b ) )
a and b and b
a and b and b
a and b and b or F
a and b and b or F
( a and b or b ) and ( a and b or b and b )
( a and b or b ) and ( a and b or b and b )
a and b or b and a and b or b and a and b and b
0
0
-10
12
2
x * 2 + 3 + 3 + 2 * y - ( 2 * y + 3 + x * 2 + 3 )
x * 2 + 3 + 3 + 2 * y - ( 2 * y + 3 + x * 2 + 3 )
x * 2 + 3 + 3 + 2 * y - 2 * y + 3 + x * 2 + 3
x * 2 + 3 + 12 + 12 + x * 2 + 3
x * 2 + 3 + 12
12 + x * 2 + 3
x * 2 + 3 + 12 - ( 12 + x * 2 + 3 )
x * 2 + 3 + 12
( x * 2 + 3 + 12 ) * ( 12 + x * 2 + 3 )
0
0
x * 2 + 3 + 12
12 + x * 2 + 3
( x * 2 + 3 + 12 ) / ( 12 + x * 2 + 3 )
x * 2 + 3 + 12
0
( T == ( c or d ) or d ) and e
T == ( c or d or d ) and e
T == ( c or d or d and e )
T == ( c or d ) or d and e
( aa or bb or cc ) and ( bb or cc == T )
( aa or bb or cc ) and ( bb or cc ) == T
( ( aa or bb or cc ) and bb or cc ) == T
( aa or bb or cc ) and bb or cc == T
( a - 1 ) / b * c - d + e
( a - 1 ) / b * c - d + e
( a - 1 ) / b * c - d + e
( a - 1 ) / b * c - d + e
( a - 1 ) / b * c - ( d + e )
( a - 1 ) / b * ( c - ( d + e ) )
( a - 1 ) / ( b * ( c - ( d + e ) ) )
b2 - c3 * d4 / e5
b2 - c3 * d4 / e5
b2 - c3 * d4 / e5
b2 - c3 * d4 / e5
( b2 - c3 ) * d4 / e5
( b2 - c3 ) * d4 / e5
( b2 - c3 ) * d4 / e5
c and d and b
c and d and T and b
not ( c and d ) and not b
not ( not ( c and d ) ) and not ( not b )
F
not ( not c ) and not ( not d ) and T and not ( not b )
